apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 31
    defaultConfig {
        applicationId "com.globalspace.miljonsales"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode 11
        versionName "2.2.4"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        multiDexEnabled true

    }
    buildFeatures{
        viewBinding true
        dataBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs = ['-Xjvm-default=enable']
    }
    lintOptions {
        checkReleaseBuilds false
    }
}

dependencies {


    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    //implementation 'com.google.firebase:firebase-ml-vision:24.1.0'
    // implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
   // implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

    // retrofit, gson
    implementation 'com.google.code.gson:gson:2.6.2'
    implementation 'com.squareup.retrofit2:retrofit:2.0.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.0.2'
    //compile 'com.google.firebase:firebase-core:12.0.0'

    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.jjoe64:graphview:4.2.1'
    implementation 'com.rengwuxian.materialedittext:library:2.1.4'
    implementation 'de.hdodenhof:circleimageview:2.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'

    implementation 'com.facebook.android:facebook-android-sdk:8.1.0'

    implementation 'com.facebook.shimmer:shimmer:0.4.0'
    implementation 'com.facebook.shimmer:shimmer:0.1.0@aar'
    implementation 'androidx.appcompat:appcompat:1.0.0'

    // appcompat library
    //noinspection GradleCompatible
    //compile 'com.google.android.gms:play-services:9.8.0'
    //implementation 'com.karumi:dexter:4.2.0'
    testImplementation 'junit:junit:4.12'
    //compile 'com.google.android.ms:play-services:8-4-0'
    implementation 'androidx.annotation:annotation:1.0.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
   // implementation 'com.google.android.gms:play-services-location:15.0.1'
   // implementation 'com.karumi:dexter:4.2.0'


    //firebase
    implementation platform('com.google.firebase:firebase-bom:30.4.1')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-messaging-ktx:23.0.8'
   /* implementation 'com.google.firebase:firebase-core:15.0.2'
    implementation 'com.google.firebase:firebase-messaging:15.0.2'*/

    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    def dagger_version="2.42"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    def lifecycle_version = "2.5.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation 'ru.egslava:MaskedEditText:1.0.5'

    // Compose dependencies
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.4.1"
    implementation "androidx.compose.runtime:runtime-livedata:1.2.0-alpha03"

    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    def room_version = "2.4.2"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    def coroutine_version = "1.6.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    implementation  "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"

    def dexter_version = "6.2.3" //Dexter is an Android library that simplifies the process of requesting permissions at runtime
    implementation "com.karumi:dexter:$dexter_version"

    def workmanager = "2.7.1"
    implementation "androidx.work:work-runtime:$workmanager"
    implementation "androidx.work:work-runtime-ktx:$workmanager"

    def dagger_assist_version = "0.3.3"
    compileOnly "com.squareup.inject:assisted-inject-annotations-dagger2:$dagger_assist_version"
    kapt "com.squareup.inject:assisted-inject-processor-dagger2:$dagger_assist_version"

    //multipart upload request
    compile 'net.gotev:uploadservice:3.3'

    //Instead of LinearLayoutManager, you can just use FlexBoxLayoutManager,If FlexDirection.ROW, then it will fill complete row until the end, then. will come to the next line and so on.
    implementation 'com.google.android:flexbox:2.0.1'

    //Read Text from Image(OCR)
    implementation 'com.google.android.gms:play-services-mlkit-text-recognition:18.0.2'

    //glide
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.2'

    //location
    implementation 'com.google.android.gms:play-services-location:19.0.1'



}
apply plugin: 'com.google.gms.google-services'
apply plugin: 'org.jetbrains.kotlin.android'
